[package]
name = "waline-mini"
version = "0.12.1"
edition = "2024"
publish = false

[dependencies]
actix-cors = "0.7.1"
actix-web = { version = "4.5.1", features = ["rustls"] }
dotenvy = "0.15.7"
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.20", features = [
  "env-filter",
  "local-time",
] }
sea-orm = { version = "1.1.2", features = [
  "sqlx-mysql",
  "sqlx-sqlite",
  "runtime-tokio-rustls",
  "macros",
  "debug-print",
] }
serde = { version = "1.0.228", features = ["derive"] }
serde_json = "1.0.145"
woothee = "0.13.0"
chrono = "0.4.42"
pulldown-cmark = "0.13.0"
envy = "0.4.2"
helpers = { version = "0.6.1", features = ["hash", "jwt", "time", "uuid"] }
lettre = { version = "0.11.11", default-features = false, features = [
  "builder",
  "hostname",
  "pool",
  "smtp-transport",
  "rustls-tls",
] }
strfmt = "0.2.5"
ammonia = "4.1.2"
regex = "1.12.2"
instant-akismet = "0.2.0"
reqwest = { version = "0.12.24", default-features = false, features = [
  "rustls-tls",
] }
totp-rs = { version = "5.7.0", features = ["otpauth", "gen_secret"] }
ip2region = "0.1.0"
migration = { path = "migration" }
futures-util = "0.3.31"

[features]
default = []
leancloud = []

[profile.dev]
opt-level = 0

[package.metadata.release]
push = true
pre-release-hook = [
  "git",
  "cliff",
  "-o",
  "CHANGELOG.md",
  "--tag",
  "{{version}}",
]

[package.metadata.git-cliff.changelog]
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% macro print_commit(commit) -%}
    - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
        {% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message | upper_first }} - \
        ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\
{% endmacro -%}

{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]\
          ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor %}
    {% for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor -%}
{%- if github -%}
{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  ## ❤️ New Contributors
{% endif %}\
{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} made their first contribution
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor -%}
{%- endif %}

"""
footer = """
"""
trim = true
postprocessors = [
  # { pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" }, # replace repository URL
]

[package.metadata.git-cliff.git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_preprocessors = [
  # Replace issue numbers
  #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # Check spelling of the commit with https://github.com/crate-ci/typos
  # If the spelling is incorrect, it will be automatically fixed.
  #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->🚀 Features" },
  { message = "^fix", group = "<!-- 1 -->🐛 Bug Fixes" },
  { message = "^doc", group = "<!-- 3 -->📚 Documentation" },
  { message = "^perf", group = "<!-- 4 -->⚡ Performance" },
  { message = "^refactor", group = "<!-- 2 -->🚜 Refactor" },
  { message = "^style", group = "<!-- 5 -->🎨 Styling" },
  { message = "^test", group = "<!-- 6 -->🧪 Testing" },
  { message = "^chore\\(release\\): prepare for", skip = true },
  { message = "^chore\\(deps.*\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore|^ci", group = "<!-- 7 -->⚙️ Miscellaneous Tasks" },
  { body = ".*security", group = "<!-- 8 -->🛡️ Security" },
  { message = "^revert", group = "<!-- 9 -->◀️ Revert" },
]
filter_commits = false
topo_order = false
sort_commits = "oldest"
